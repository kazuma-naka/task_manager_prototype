# Name of the workflow
name: Create Release and Upload Binaries

# Trigger on tags that start with 'v'
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

# Add write permissions for creating a release
permissions:
  contents: write

jobs:
  # JOB 1: Build the executables for Windows, macOS, and Linux
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --name "TaskManager" --onefile --windowed task_manager.py

      # **FIX 1: Rename assets to be unique for each OS and zip the macOS .app**
      - name: Prepare Release Assets
        run: |
          if [ $RUNNER_OS == 'Windows' ]; then
            mv dist/TaskManager.exe dist/TaskManager-windows.exe
          elif [ $RUNNER_OS == 'Linux' ]; then
            mv dist/TaskManager dist/TaskManager-linux
          elif [ $RUNNER_OS == 'macOS' ]; then
            zip -r dist/TaskManager-macos.zip dist/TaskManager.app
          fi
        shell: bash

      # **FIX 2: Update the path to upload all files in the dist folder**
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: TaskManager-${{ matrix.os }}
          path: dist/*

  # JOB 2: A new job to create the release AFTER all builds are successful
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # The glob pattern will now find the uniquely named files
          files: release_assets/**/*
